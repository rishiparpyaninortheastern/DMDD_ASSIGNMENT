ALTER TABLE COMPANYSECURITY
ADD SEC_DESC VARCHAR2(50);

SET SERVEROUTPUT ON;
create or replace procedure CustomerTransaction (
TXNTYPE IN TRANSACTION.txn_type%TYPE,
SECDESC	IN companysecurity.sec_desc%TYPE,
QTY IN TRANSACTION.qty%TYPE
)
AS
p_username VARCHAR2(20);
p_buyingpower NUMBER(10,0);
P_PRICE NUMBER(10);
result1 VARCHAR2(50) := NULL;
max_ID NUMBER(10);
vcSecName VARCHAR2(30);
nExchgID NUMBER(10);
SUMPRICE NUMBER(10);
P_SEC_DESC VARCHAR(50);
P_CUSTOMER_ID NUMBER(10);
P_STOCK_ID NUMBER(20);
e_LOW_BUYINGPOWER EXCEPTION;
E_INCORRECT_CUSTID EXCEPTION;
BEGIN


---------GET STOCK_ID--------------
SELECT STOCK_ID INTO P_STOCK_ID FROM COMPANYSECURITY WHERE SEC_DESC=SECDESC;
----------------get customer username------------
SELECT username into  p_username FROM user_users ;
select CUST_ID INTO P_CUSTOMER_ID from CUSTOMER where cust_username=p_username;
-----GET STOCK PRICE
SELECT MARKET_VAL INTO P_PRICE FROM STOCKINFO WHERE STOCK_ID=P_STOCK_ID;
SELECT cust_buyingpower INTO p_buyingpower FROM CUSTOMER WHERE CUST_ID=P_CUSTOMER_ID;

-----GENERATING TRANSACTION ID-------
select (MAX(TXN_ID)+1) into max_ID from TRANSACTION;
dbms_output.put_line('View Stock Purchase guide');

dbms_output.put_line(' STOCK       QUANTITY       PRICE');
------CHECKING BUYING POWER------------
SELECT QTY*P_PRICE INTO SUMPRICE FROM DUAL;
IF(p_buyingpower<SUMPRICE)
THEN
RAISE e_LOW_BUYINGPOWER;
END IF;



-----INSERT INTO TRANSACTION----------
INSERT INTO TRANSACTION (TXN_ID, TXN_TYPE, CUSTOMER_ID, STOCK_ID, QTY,PRICE,TXN_DATE,TXN_TIME)
    VALUES(max_ID,TXNTYPE,P_CUSTOMER_ID,P_STOCK_ID,QTY,P_PRICE,SYSDATE ,SYSTIMESTAMP);
    
    COMMIT;
     dbms_output.put_line('TRANSACTION SUCCESFUL');
 --- UPDATE BUYING POWER------
 UPDATE  CUSTOMER SET CUST_BUYINGPOWER=CUST_BUYINGPOWER-SUMPRICE WHERE CUST_ID=P_CUSTOMER_ID;
 
 COMMIT;

 dbms_output.put_line('HERE IS A LIST OF PREVIOUS TRANSACTION');
 FOR PREVIOUSTRANSACTION IN 
          (
            SELECT TXN_TYPE,STOCK_ID,QTY,PRICE  FROM transaction 
          )
          LOOP
            dbms_output.put_line(PREVIOUSTRANSACTION.TXN_TYPE||'-------'|| PREVIOUSTRANSACTION.STOCK_ID||'------ '||PREVIOUSTRANSACTION.QTY||'-------'||PREVIOUSTRANSACTION.PRICE);
          END LOOP;
EXCEPTION
WHEN 
e_LOW_BUYINGPOWER THEN
dbms_output.put_line('NOT ENOUGH BUYING POWER');
END;
/

