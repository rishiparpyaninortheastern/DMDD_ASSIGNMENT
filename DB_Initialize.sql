---REGIONCODES

SET SERVEROUTPUT ON;
DECLARE
nCount NUMBER;
--nCount1 NUMBER;
BEGIN
SELECT count(*) into nCount FROM user_tables where table_name = 'REGIONCODES';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('REGIONCODES TABLE ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE REGIONCODES(
REGCD varchar(10) PRIMARY KEY ,
DES varchar(20) NOT NULL,
TIMEZONE varchar(10),
CONSTRAINT check_tmzone CHECK 
(TIMEZONE IN (''EST'',''IST'',''PST'',''GMT'',''CST'',''SST'')))';

EXECUTE IMMEDIATE 'INSERT INTO REGIONCODES VALUES(''R001'',''NorthAmerica_Est'',''EST'')';
EXECUTE IMMEDIATE 'INSERT INTO REGIONCODES VALUES(''R002'',''NorthAmerica_Pst'',''PST'')';
EXECUTE IMMEDIATE 'INSERT INTO REGIONCODES VALUES(''R003'',''Singapore_Sst'',''SST'')';



END IF;


---ADDRESS


SELECT count(*) into nCount FROM user_tables where table_name = 'ADDRESS';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('ADDRESS TABLE ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE ADDRESS(
    ADDR_CODE varchar(10) PRIMARY KEY,
    ADDR_COUNTRYNAME varchar(50) NOT NULL,
    ADDR_PROVINCE varchar2(50) NOT NULL,
    CONSTRAINT REGCD
    REGIONCODE varchar(10) REFERENCES REGIONCODES(REGCD))';
    
    EXECUTE IMMEDIATE 'INSERT INTO ADDRESS VALUES(''A01'',''United States of America'',''Massachusetts'',''R001'')';
    EXECUTE IMMEDIATE 'INSERT INTO ADDRESS VALUES(''A02'',''United States of America'',''New Hampshire'',''R001'')';
    EXECUTE IMMEDIATE 'INSERT INTO ADDRESS VALUES(''A03'',''United States of America'',''California'',''R002'')';
    EXECUTE IMMEDIATE 'INSERT INTO ADDRESS VALUES(''A04'',''United States of America'',''Oregon'',''R002'')';
    EXECUTE IMMEDIATE 'INSERT INTO ADDRESS VALUES(''A05'',''Singapore'',''North East Community'',''R003'')';
    EXECUTE IMMEDIATE 'INSERT INTO ADDRESS VALUES(''A06'',''Malaysia'',''Johor'',''R003'')';


END IF;


--CUSTOMER


SELECT count(*) into nCount FROM user_tables where table_name = 'CUSTOMER';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('CUSTOMER TABLE ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE CUSTOMER(
    CUST_ID NUMBER(10) GENERATED BY DEFAULT AS IDENTITY  PRIMARY KEY,
    CUST_NAME VARCHAR(20) NOT NULL,
    CUST_CONTACT NUMBER(10) NOT NULL,
    CUST_EMAIL VARCHAR(50) NOT NULL,
    CUST_ACCOUNTNO VARCHAR(20) NOT NULL,
    CONSTRAINT ADDR_CODE
    ADDR VARCHAR(10) REFERENCES ADDRESS(ADDR_CODE),
    CUST_BUYINGPOWER NUMBER(10) NOT NULL,
    CUST_USERNAME VARCHAR(10) NOT NULL,
    CUST_PASSWORD VARCHAR(20) NOT NULL,
    CHECK (CUST_EMAIL LIKE ''%@%com%''))';
    
   -- EXECUTE IMMEDIATE 'INSERT INTO CUSTOMER VALUES(''CUST01'',''JOHN'',''7813544128'',''JOHN@GMAIL.COM'',''ACC01'',''United States of America'',''Massachusetts'',''R001'',''Massachusetts'',''R001'')';

END IF;



-- COMPANY TABLE--

SELECT count(*) into nCount FROM user_tables where table_name = 'COMPANY';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('COMPANY TABLE ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE '
        CREATE TABLE COMPANY(
        COMPANY_ID NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
        COMPANY_NAME VARCHAR2(30) NOT NULL,
        COMPANY_CONTACT NUMBER(10) NOT NULL,
        PRIMARY KEY(COMPANY_ID))';

END IF;


--- STOCK EXCHANGE--
SELECT count(*) into nCount 
FROM user_tables 
WHERE table_name='STOCKEXCHANGE';
IF(nCount>0)
THEN
    DBMS_OUTPUT.PUT_LINE('STOCKEXCHANGE TABLE ALREADY EXISTS');    
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE STOCKEXCHANGE(
    EXCHANGE_ID NUMBER(10) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EXCHANGE_NAME VARCHAR(30) NOT NULL,
    COMPANY_ID NUMBER(10) NOT NULL,
    CONSTRAINT COMPANY_ID
    FOREIGN KEY(COMPANY_ID) REFERENCES COMPANY(COMPANY_ID))';


END IF;



--SECURITY EXCHANGE--
SELECT count(*) into nCount FROM user_tables where table_name = 'SECURITYEXCHANGE';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('SECURITYEXCHANGE TABLE ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE SECURITYEXCHANGE(
SECURITY_EXCH_ID NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
SECURITY_ID NUMBER(10) PRIMARY KEY,
EXCHANGE_ID NUMBER(10) NOT NULL,
CONSTRAINT EXCHANGE_ID
FOREIGN KEY(EXCHANGE_ID) REFERENCES STOCKEXCHANGE(EXCHANGE_ID))';
END IF;


--STOCK INFO--
SELECT count(*) into nCount 
FROM user_tables 
WHERE table_name='STOCKINFO';
IF(nCount>0)
THEN
    DBMS_OUTPUT.PUT_LINE('STOCKINFO TABLE ALREADY EXISTS');    
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE STOCKINFO(
    STOCK_ID number(10) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    AS_OF_DATE DATE UNIQUE,
    MARKET_VAL NUMBER(10),
    STOCK_QTY_AVAILABLE NUMBER(10),
    CONSTRAINT check_date CHECK (extract(day from AS_OF_DATE) = 1))';
END IF;


--- SECURITY TYPE
SELECT count(*) into nCount FROM user_tables where table_name = 'SECURITYTYPE';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('SECURITYTYPE TABLE ALREADY EXISTS');
ELSE
        EXECUTE IMMEDIATE 'CREATE TABLE SECURITYTYPE(
      SECURITY_TYPE VARCHAR(20) NOT NULL,
     SECURITYTYPE_DESC VARCHAR(20) NOT NULL,
      PRIMARY KEY (SECURITY_TYPE)
    )';
END IF;



-- COMPANYSECURITY--
SELECT count(*) into nCount FROM user_tables where table_name = 'COMPANYSECURITY';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('COMPANYSECURITY TABLE ALREADY EXISTS');
ELSE
     EXECUTE IMMEDIATE 'CREATE TABLE COMPANYSECURITY(
    COMPANY_ID NUMBER(10) NOT NULL,
    SECURITY_ID NUMBER(10) GENERATED BY DEFAULT AS IDENTITY ,
    STOCK_ID NUMBER(10) NOT NULL,
    REG_CD VARCHAR(10) ,
    SEC_TYPE VARCHAR(20),
    PRIMARY KEY(SECURITY_ID),
    CONSTRAINT COMPANY_ID
    FOREIGN KEY(COMPANY_ID) REFERENCES COMPANY(COMPANY_ID),
    CONSTRAINT STOCK_ID
    FOREIGN KEY(STOCK_ID) REFERENCES STOCKINFO(STOCK_ID),
    CONSTRAINT REG_CD
    FOREIGN KEY(REG_CD) REFERENCES REGIONCODES(REGCD),
    CONSTRAINT SEC_TYPE
    FOREIGN KEY(SEC_TYPE) REFERENCES SECURITYTYPE(SECURITY_TYPE))';
END IF;


--- CUSTOMERHOLDINGS---
SELECT count(*) into nCount FROM user_tables where table_name = 'CUSTOMERHOLDING';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('CUSTOMERHOLDING TABLE ALREADY EXISTS');
ELSE
     EXECUTE IMMEDIATE 'CREATE TABLE CUSTOMERHOLDING(
    HOLDINGID NUMBER(10) GENERATED BY DEFAULT AS IDENTITY  PRIMARY KEY,
    CONSTRAINT SECURITY_ID
    SECURITYID  NUMBER(10)  REFERENCES COMPANYSECURITY(SECURITY_ID) NOT NULL,
    QTY	VARCHAR(30)	UNIQUE  NOT NULL,
    CONSTRAINT CUST_ID
    CUSTOMERID	NUMBER(10)	 REFERENCES CUSTOMER(CUST_ID) NOT NULL,
    COMPANYID	NUMBER	NOT NULL,
    asofdate  DATE )';
END IF;

SELECT count(*) into nCount 
FROM user_tables 
WHERE table_name='TRANSACTION';
IF(nCount>0)
THEN
    DBMS_OUTPUT.PUT_LINE('TRANSACTION TABLE ALREADY EXISTS');    
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE TRANSACTION(
      TXN_ID NUMBER(10)  GENERATED BY DEFAULT AS IDENTITY ,
      TXN_TYPE VARCHAR(30) NOT NULL,
      CUSTOMER_ID NUMBER(10) NOT NULL,
      STOCK_ID NUMBER(10) NOT NULL,
      QTY NUMBER(10) NOT NULL,
      PRICE NUMBER(10),
      TXN_DATE DATE,
      TXN_TIME TIMESTAMP,
      PRIMARY KEY(TXN_ID),
      CONSTRAINT CUST_IDTRANSACTION
      FOREIGN KEY(CUSTOMER_ID)REFERENCES CUSTOMER(CUST_ID),
      CONSTRAINT STOCK_IDTRANSACTION
      FOREIGN KEY(STOCK_ID) REFERENCES STOCKINFO(STOCK_ID))';
END IF;
END;